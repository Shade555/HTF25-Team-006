:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Ensure the app always fills the viewport so page background doesn't show
   as grey flanks when child containers are centered. */
html, body, #root {
  height: 100%;
  width: 100%;
  margin: 0;
  overflow-x: hidden; /* prevent unwanted horizontal scrolling */
}

/* Make body background match the app dark theme so edges remain dark
   even if a child element doesn't cover full width. */
body {
  background-color: #0b1220;
}

/* Ensure only the document (body) shows a vertical scrollbar.
   Hide internal scrollbars on nested elements to avoid the double-scrollbar
   appearance between layout columns. This preserves scrolling for the page
   while keeping internal components visually clean. */
html, body {
  overflow-y: auto; /* primary scrollbar on the page */
}

/* Style the main body scrollbar to match the dark theme */
body::-webkit-scrollbar {
  width: 12px;
}
body::-webkit-scrollbar-track {
  background: transparent;
}
body::-webkit-scrollbar-thumb {
  background: rgba(71, 85, 105, 0.6);
  border-radius: 8px;
}

/* Hide scrollbars on all non-root elements so only the page scrollbar remains.
   This will prevent nested scrollbars (the thin one between columns).
   Note: this hides scrollbars visually but doesn't disable programmatic
   scrolling for elements that rely on overflow. */
*:not(html):not(body) {
  -ms-overflow-style: none; /* IE/Edge */
  scrollbar-width: none; /* Firefox */
}
*:not(html):not(body)::-webkit-scrollbar {
  display: none; /* Chrome, Safari */
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  /* Ensure body does not center the app horizontally/vertically so child
     containers can stretch to full width/height. Centering caused the main
     app area to be constrained and reveal the page background as a grey
     band below the podcast cards. */
  display: block;
  min-width: 320px;
  min-height: 100vh;
}

/* Ensure the app's root dashboard container always fills the viewport
   and uses the same dark background so there are no visible grey gaps. */
.af-dashboard, #root, main, .app-root {
  min-height: 100vh;
  width: 100%;
  background-color: #0b1220;
  overflow-x: hidden;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}
